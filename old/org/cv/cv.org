#+AUTHOR:    Mahan Fathi
#+EMAIL:     mahan0fathi@gmail.com


* Education
*** Mila: Montreal Institute for Learning Algorithms (M.Sc.) [2020-22]
#+begin_verse
University of Montreal, School of Computer Science. Advised by Prof. [[http://pierrelucbacon.com/][Pierre-Luc Bacon]].
#+end_verse
*** Sharif University of Technology (B.Sc.) [2013-17. GPA: 3.88/4.0]
#+begin_verse
School of Mechanical Engineering, Dynamics and Control.
[[http://www.openthesis.org/document/view/603263_0.pdf][Bachelor Thesis]]: Nonlinear Control of a Ballbot, with Focus on Sample-Based Motion Planning Algorithms.
#+end_verse
*** NODET: High School [2009-13. GPA: 19.3/20.0]
#+begin_verse
National Organization for Development of Exceptional Talents, Mathematics and Physics.
#+end_verse

-----

* Awards and Fellowships
*** Research Assistantship at Aalto University [Jun. to Sep. 2019]
#+begin_verse
AI, ML, and Game Development. Prof. [[http://perttu.info/][Perttu Hämäläinen]].
#+end_verse
*** Awarded Membership to National Elite Foundation [Aug. 2013]
*** Silver Medalist at 25th National Physics Olympiad [Sep. 2012]

-----

* Publications
*** Control of a Ballbot Using Sampling-Based Methods (1st Author)
#+begin_verse
Submitted to Scientia Iranica, published by Sharif University of Technology.
#+end_verse
*** [[https://www.civilica.com/Paper-ISME24-ISME24_657.html][Geometry Optimization of a Single-Blade Windshield Wiper]] (1st Author)
#+begin_verse
ISME2016: 24th Annual International Conference on Mechanical Engineering.
#+end_verse

-----

* Research
*** [[github:MahanFathi/Model-Based-RL][Model-Based Policy Gradients]] [Jul. to Sep. 2019]
#+begin_verse
 Motions emerge from directly back-proping into policy networks using reparam trick and physics gradients calculated in MuJoCo.
 To backprop into stochastic policies, given an unknown model, one has to use the REINFORCE theory, to be able to calculate the gradients by sampling the environment. These methods usually have high variance, so baselines and value/advantage functions were introduced. Another way to backpropagate into your policy network is to use the “reparameterization trick” as in VAEs, but they entail knowledge of upstream gradients, and hence a known model. The policy gradients calculated w/ the reparam trick are often much lower in variance, so one can go wo/ baselines and value networks. This project puts it all together: computation graph of policy and dynamics, upstream gradients from MuJoCo dynamics and rewards, reparam trick, and optimization.
#+end_verse
*** [[github:MahanFathi/Unity2OpenSim][Unity2OpenSim]] [Jun. to Jul. 2019]
#+begin_verse
A corss-platform painless pipeline to perform Inverse Kinematics/Dynamics of OpenSim on Unity models and motions.
#+end_verse
*** [[https://github.com/MahanFathi/iLQG-MuJoCo][MPC of MuJoCo Agents Using iLQG]] [Dec. 2017 to Jan. 2018]
#+begin_verse
Inspired by the work of Todorov et al., implemented a fast Iterative LQG solver that reliably commands agents, such as the Hopper, in MPC mode, in presence of external forces.
#+end_verse
*** Motion Mimic [Nov. 2017 to Jan. 2018]
#+begin_verse
Thanks to the readily available CMU MoCap, a bottom-half MuJoCo model of a bipedal is able to stably and naturally walk via *Generative Adversarial Imitation Learning(TRPO)* and stading punching motions are succesfuly mimiced for a humanoid using *DeepMimic(PPO)* in *Unity3D(ML-Agents)*.
#+end_verse
*** Non-Holonomic Kinodynamic Motion Planning [May. 2017]
#+begin_verse
Using optimal control as a fast inverse dynamic model, a general sample-based motion planning algorithm was proposed for complex non-holonomic agents in kinodynamic spaces.
#+end_verse
*** [[http://www.openthesis.org/document/view/603263_0.pdf][Nonlinear Control of a Ballbot]]
#+begin_verse
Online motion and path planning of the highly nonlinear Rezero, using RRT and optimal control.
#+end_verse
*** [[https://www.slideshare.net/slideshow/embed_code/key/wyRKZKDDHxy1AF][Unsupervised Object Localization]] [Sep. 2018]
#+begin_verse
Extracting the deep-seated spatial information of classification networks by Guided Back-propagating most affecting neurons to the image, enables us to spot image parts corresponding to the object.
#+end_verse

-----

* Experince
*** Team Leader at [[https://cafebazaar.ir/?l=en][CafeBazaar]] [Sep. 2019 _Ongoing_]
#+begin_verse
I am currently at [[https://balad.ir/about][Balad]] , the biggest domestic map and navigation application of Iran, a product of the Iranian tech giant, CafeBazaar.

- Technical Leadership and Product Management of Data Infrastructure, a team of 7, responsible for attending to the data science needs of the map tribe (Sep. 2019 - Apr. 2020).

- Team Leader of Augmented Reality team (Sep. 2019 - Ongoing).

- Team Leader of ETA&Traffic, a team of Software Engineers and Data Scientists, concerned with ETA and Traffic (-__-) (Apr. 2020 - Ongoing).

#+end_verse
*** Senior Data Scientist at CafeBazaar [Oct. 2018 to Sep. 2019]
#+begin_verse
I worked at Navigation team at Balad on route planning, traffic prediction, and ETA using data-driven methods. Moreover, as a computer vision scientist I was concerned with information extraction from street and aerial imagery.
#+end_verse
*** Senior Backend Developer at [[https://tapsi.ir/][TAPSI]] [May. to Oct. 2018]
#+begin_verse
I was a member of the Dispatch/Pricing team at TAPSI, which is somehow the heart of any ride-hailing platform. Whenever a ride request is submitted, we are the invisible hands behind, connecting riders and drivers.
#+end_verse
*** Data Scientist at TAPSI [Feb. to May. 2018]
#+begin_verse
Among the biggest Iranian tech companies, TAPSI is a ride-hailing platform with millions of monthly active users.
#+end_verse

-----

* Projects
*** Redesigning Balad's Traffic Infrastructure [Jun. to Oct. 2020]
#+begin_verse
Live Traffic: Cutting down on computational resources and improvement on LiveTraffic accuracy by a huge factor. We use Apache Kafka and Flink for serving and streaming the location data.
Typical Traffic: A more sluggish inference for traffic inferred from historical data.
#+end_verse
*** AR Navigation [Jul. 2019 to Aug. 2020]
#+begin_verse
Providing users with an Augmented Reality driven experience for navigation.
The team tackled the problem of finding the near-optimal vanishing point for a sequence of input images and depiction of graphical instructions accordingly, from OpenGL scratch. For now, the system is embedded in Balad running on Android phones.
#+end_verse
*** [[https://github.com/MahanFathi/OBJET][OBJET: A Computer Vision Graphical Sandbox]] [Feb. to Mar. 2020]
#+begin_verse
OBJET, is a graphical environment, developed in C++/OpenGL and accessible in Python via SWIG, to cater to the data needs of one willing to conduct research on computer vision in such domains. Load your own objects in a room, take a snapshot of the viewport, from the viewpoint of the customizable camera, and load it to python. This gives you the ability to create data on-the-fly, in your python data loader.
#+end_verse
*** Road Extraction from Satellite Imagery [Jan. to Mar. 2020]
#+begin_verse
Extraction of the graph of roads from aerial images, via image segmentation and a shitload of post-processing.
#+end_verse
*** Automated Face, Plate Number, Etc. Censorship of Balad’s Street Imagery via YOLOv3 [Nov. 2019 to Jan. 2020]
#+begin_verse
Significantly enhanced the former RCNN driven approach in terms of performance.
#+end_verse
*** Object Extraction from Satellite Imagery [Dec. 2019 to Jan. 2020]
Extraction of building boundaries, parks, bridges, crosswalks, parking lots, etc. from satellite imagery.
*** Automated Tagging of Crowd-sourced Images [Nov. to Dec. 2019]
#+begin_verse
A service responsible for automated tagging of crowd-sourced images with labels such as #indoor/outdoor, #menu, #food, #persons_posing, etc.
#+end_verse
*** Extraction of Speed Bumps and Traffic Lights from GPS Logs [Dec. 2019]
*** Live Traffic [Mar. 2019]
#+begin_verse
Design, implementation, optimization, deployment, maintenance, and storage of real-time user GPS data, single-handedly. The service assigns a traffic metric to map road segments, which are then used by Navigation and ETA services.
#+end_verse
*** Street Imagery Sensitive Content Censorship [Feb. 2019]
#+begin_verse
YOLOv3 is the core of this fast censor network, responsible for blurring of faces and licence plates in street images.
#+end_verse
*** RNN ETA [Feb. to Mar. 2019]
#+begin_verse
Reducing Balad's ETA MSE by a factor of 2, using a segment-based LSTM, trained on GPS logs.
#+end_verse
*** [[https://blog.usejournal.com/collecting-a-nations-points-of-interest-computer-vision-to-the-rescue-41026053bdf6][Detection and Tracking of Points of Interest]] [Nov. 2018 Jan. 2019]
#+begin_verse
Trained and deployed a Mask-RCNN model for detection of the store signs. Also came up with a novel tracking algorithm to bundle up repeating billboards in subsequent images. Read about it at [[https://blog.usejournal.com/collecting-a-nations-points-of-interest-computer-vision-to-the-rescue-41026053bdf6][my personal blog]] and [[http://vrgl.ir/jBg3J][CafeBazaar tech blog]].
#+end_verse
*** [[github:MahanFathi/end2end-self-driving-car][Learning to Drive in 2 Days]] [Mar. 2019]
#+begin_verse
Inspired by the work of NVIDIA on DAVE-2, in a team of 6, at the 7th Hackathon of CafeBazaar, we collected just enough data, to train an end-to-end deep conv-net to infer steering angle for each captured image. We then came by a pipeline to connect the center camera to this module at the test time. We were able to achieve the MVP of staying in lanes and avoiding doubled-parked cars. [[https://vimeo.com/371631581][Here is a video]]!
#+end_verse
*** Location Service Rewrite [Oct. 2018]
#+begin_verse
Reducing the response time of TAPSI’s main bottleneck by a crazy factor. We made heavy use of Lua and Redis.
#+end_verse
*** Semi-concurrent Dispatch Algorithm [May. 2018 Aug. 2018]
#+begin_verse
Implementation of the algorithm as the owner of the project, which resulted in a 3% rise in our finished rides according to RCTs in the first launch. To give you a sense, a percent rise in the ride fulfillment rate in a 6-month long OKR of a team would be an ambitious target.
#+end_verse

-----

* Skills
*** Computer Science
#+begin_verse
- Adept at Deep RL, reviewed many state-of-the-art projects
- Implementation of several projects in computer vision
- Nonlinear optimization, convex optimization and numerical methods
- Mostly experienced at motion generation methods
- Optimal control theory, stochastic control, and robust control
- Direct Policy Search methods and Sequential Quadratic Programming
#+end_verse
*** Programming
#+begin_verse
- Long programming experience in C++, Python, C, JavaScript, Java, Go, Lisp, Lua, and Unix Evironment
- TensorFlow, PyTorch/Torch, Caffe, and Keras for Deep Learning Frameworks
- MuJoCo, Unity, and Bullet for Physics + OpenGL and Blender for Graphics
- Experienced in C#, ROS, SQL, Redis and Spark
- Familiarity with a number of nonlinear/convex optimization packages
#+end_verse
*** Other
#+begin_verse
- Linux, Docker, Django, Node.js, LaTeX, C, \\
  Mathematica, Matlab, Simulink, Maple, etc.
- Can’t live w/o Arch, Emacs, and i3
- Expert pencil artist and acoustic guitar fanatic
#+end_verse

-----

* Coursework
*** Machine Learning
#+begin_verse
+ Berkeley's CS294: Deep RL by Sergey Levine
+ David Silver's UCL Course of RL
+ Stanford's CS231n: CNNs for Visual Recognition
#+end_verse
*** Control Theory and Robotics
#+begin_verse
+ Underactuated Robotics by Russ Tedrake
+ Berkeley's CS287: Advanced Robotics by Pieter Abbeel
+ Programming for Robotics - ROS (ETH)
+ Artificial Intelligence for Robotics (Udacity)
#+end_verse
*** Robotics Related Courses from Bachelor
#+begin_verse
+ Mechanism Design (1st in class 19.8/20.0)
+ Engineering Math (1st in class 19.5/20.0)
+ Programming in C (1st in class 20.0/20.0)
+ Dynamics of Machines (3st in class 19.1/20.0)
+ Dynamics and Modeling (3st in class 19.9/20.0)
#+end_verse

-----

* Teaching
*** Mathematica Instructor [Dec. 2016]
#+begin_verse
Two-week long, additional program at Sharif University of Technology.
#+end_verse
*** Physics Olympiad Instructor [Jun. to Nov. 2014]
#+begin_verse
Introduction to Mechanics, Electrodynamics and Differential Equations.
#+end_verse

-----

* Language
*** Persian(native), English(TOEFL iBT: 110 ), and German(basic)

-----

* Interests
|------------------------------------+-------------------------+------------------------------+-------------------|
| *Robotics and Character Animation* | *Machine Learning*      | *Software Engineering*       | *Cool Stuff*      |
|------------------------------------+-------------------------+------------------------------+-------------------|
| Bipedal Locomotion                 | Reinforcement Learning  | Backend Development          | Game Development  |
| Agile Gaits for Quadrupeds         | Optimization Algorithms | Operating Systems <3         | Augmented Reality |
| Hierarchical Planning and Control  | Computer Vision         | Microservices                | Virtual Reality   |
| Kinematic Character Animation      | Computer Graphics       | Machine Learning Engineering | Exotic Editors    |
| Self-driving cars                  | Rethinking Neural Nets  | C/C++!                       | Free Software     |
|------------------------------------+-------------------------+------------------------------+-------------------|
